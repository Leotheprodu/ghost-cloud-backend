// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
   previewFeatures = ["omitApi"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  password  String
  status    String   @default("inactive")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tokens    Temporal_token_pool[]
  services  Service_instances[]
  roles     roles[]
}
model roles {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     Users[]
}
model Session {
  id        String   @id 
  sid       String   @unique
  data      String   @db.VarChar(255)
  expiresAt   DateTime
}

model Temporal_token_pool {
  id             Int      @id @default(autoincrement())
  token          String   @unique
  userEmail      String
  user           Users    @relation(fields: [userEmail], references: [email])
  type           String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Services {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  status    String   @default("active")
  memory    Int
  cores     Int
  disk      Int
  os        String
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  service_instance Service_instances[]
}
model Service_instances {
  id        Int      @id @default(autoincrement())
  serviceId Int
  userId    Int
  ip        String
  serviceUsername String
  servicePassword String
  paymentDate DateTime
  price     Float
  status    String   @default("active")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      Users     @relation(fields: [userId], references: [id])
  service   Services @relation(fields: [serviceId], references: [id])
}